# Obfuscated with ARLIDA XD
# https://www.github.com/ARLIDA-XD
# Jangan Di dec File ini Hargai ARLIDA PUTRI
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))